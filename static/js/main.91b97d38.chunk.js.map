{"version":3,"sources":["students.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["students","id","korname","engname","StudentContainer","student","React","useState","isChecked","setIsChecked","Grid","rows","style","border","undefined","onClick","src","minWidth","width","borderRadius","App","className","Box","backgroundColor","Heading","level","textAlign","margin","left","pad","borderWidth","borderStyle","columns","Array","fill","map","_","gap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAMaA,G,MAAsB,CACjC,CAAEC,GAAI,KAAMC,QAAS,MAAOC,QAAS,cACrC,CAAEF,GAAI,KAAMC,QAAS,MAAOC,QAAS,kBACrC,CAAEF,GAAI,KAAMC,QAAS,MAAOC,QAAS,cACrC,CAAEF,GAAI,QAASC,QAAS,MAAOC,QAAS,gBACxC,CAAEF,GAAI,OAAQC,QAAS,MAAOC,QAAS,YACvC,CAAEF,GAAI,SAAUC,QAAS,MAAOC,QAAS,eACzC,CAAEF,GAAI,QAASC,QAAS,MAAOC,QAAS,YACxC,CAAEF,GAAI,OAAQC,QAAS,MAAOC,QAAS,aACvC,CAAEF,GAAI,KAAMC,QAAS,MAAOC,QAAS,cACrC,CAAEF,GAAI,SAAUC,QAAS,MAAOC,QAAS,gBACzC,CAAEF,GAAI,SAAUC,QAAS,MAAOC,QAAS,kBACzC,CAAEF,GAAI,SAAUC,QAAS,MAAOC,QAAS,iBACzC,CAAEF,GAAI,QAASC,QAAS,MAAOC,QAAS,gBACxC,CAAEF,GAAI,MAAOC,QAAS,MAAOC,QAAS,eACtC,CAAEF,GAAI,QAASC,QAAS,MAAOC,QAAS,eACxC,CAAEF,GAAI,SAAUC,QAAS,MAAOC,QAAS,gBACzC,CAAEF,GAAI,UAAWC,QAAS,MAAOC,QAAS,eAC1C,CAAEF,GAAI,QAASC,QAAS,MAAOC,QAAS,e,OCnBpCC,EAAmD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClDJ,EAAgBI,EAAhBJ,GAAIE,EAAYE,EAAZF,QACZ,EAAkCG,IAAMC,UAAS,GAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,OACE,eAACC,EAAA,EAAD,CACEC,KAAM,CAAC,MAAO,QACdC,MAAO,CAAEC,OAAQL,EAAY,uBAAoBM,GACjDC,QAAS,WACPN,GAAcD,IAJlB,UAOE,qBACEQ,IAAG,kBAAaf,GAAM,OAAnB,QACHW,MAAO,CACLK,SAAU,EACVC,MAAO,OACPC,aAAc,SAGlB,4BAAIhB,QAqCKiB,MAhCf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CAAKV,MAAO,CAAEW,gBAAiB,sBAA/B,SACE,cAACC,EAAA,EAAD,CAASC,MAAM,IAAIC,UAAU,QAAQC,OAAQ,CAAEC,KAAM,SAArD,kCAIF,cAACN,EAAA,EAAD,CAAKO,IAAI,SAASjB,MAAO,CAAEW,gBAAiB,sBAA5C,SACE,cAACD,EAAA,EAAD,CACEO,IAAI,SACJjB,MAAO,CACLC,OAAQ,kBACRiB,YAAa,OACbC,YAAa,UALjB,SAQE,cAACrB,EAAA,EAAD,CACEsB,QAAS,IAAIC,MAAM,GAAGC,KAAK,GAAGC,KAAI,SAACC,GAAD,MAAO,SACzCC,IAAI,SACJhB,UAAU,OAHZ,SAKGrB,EAASmC,KAAI,SAAC9B,GAAD,OACZ,cAAC,EAAD,CAAkBA,QAASA,iBCtC1BiC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91b97d38.chunk.js","sourcesContent":["export interface Student {\n  id: string | null;\n  korname: string;\n  engname: string;\n}\n\nexport const students: Student[] = [\n  { id: null, korname: \"aaa\", engname: \"Sihyun Lee\" },\n  { id: null, korname: \"aaa\", engname: \"Jean-Yoon Choi\" },\n  { id: null, korname: \"aaa\", engname: \"Jiwon Song\" },\n  { id: \"shlee\", korname: \"aaa\", engname: \"Soohyeon Lee\" },\n  { id: \"sban\", korname: \"aaa\", engname: \"Subin An\" },\n  { id: \"sbpark\", korname: \"aaa\", engname: \"Sebeom Park\" },\n  { id: \"archo\", korname: \"aaa\", engname: \"Aeri Cho\" },\n  { id: \"dtan\", korname: \"aaa\", engname: \"Dantae An\" },\n  { id: \"hj\", korname: \"aaa\", engname: \"Hyeon Jeon\" },\n  { id: \"krchoe\", korname: \"aaa\", engname: \"Kiroong Choe\" },\n  { id: \"shpark\", korname: \"aaa\", engname: \"Seokhyeon Park\" },\n  { id: \"swjung\", korname: \"aaa\", engname: \"Seokweon Jung\" },\n  { id: \"jykim\", korname: \"aaa\", engname: \"Jaeyoung Kim\" },\n  { id: \"bok\", korname: \"aaa\", engname: \"Jinwook Bok\" },\n  { id: \"ghhan\", korname: \"aaa\", engname: \"GuHyuan Han\" },\n  { id: \"dhshin\", korname: \"aaa\", engname: \"DongHwa Shin\" },\n  { id: \"ylchang\", korname: \"aaa\", engname: \"Youli Chang\" },\n  { id: \"bjlee\", korname: \"aaa\", engname: \"Brian Lee\" },\n];\n","import { Box, Grid, Heading } from \"grommet\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Student, students } from \"./students\";\n\nconst StudentContainer: React.FC<{ student: Student }> = ({ student }) => {\n  const { id, engname } = student;\n  const [isChecked, setIsChecked] = React.useState(false);\n  return (\n    <Grid\n      rows={[\"1fr\", \"auto\"]}\n      style={{ border: isChecked ? \"5px solid black\" : undefined }}\n      onClick={() => {\n        setIsChecked(!isChecked);\n      }}\n    >\n      <img\n        src={`./asset/${id || \"anon\"}.jpg`}\n        style={{\n          minWidth: 0,\n          width: \"100%\",\n          borderRadius: \"50%\",\n        }}\n      />\n      <p>{engname}</p>\n    </Grid>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Box style={{ backgroundColor: \"rgb(189, 223, 147)\" }}>\n        <Heading level=\"2\" textAlign=\"start\" margin={{ left: \"small\" }}>\n          출석부\n        </Heading>\n      </Box>\n      <Box pad=\"medium\" style={{ backgroundColor: \"rgb(189, 223, 147)\" }}>\n        <Box\n          pad=\"medium\"\n          style={{\n            border: \"1px solid white\",\n            borderWidth: \"10px\",\n            borderStyle: \"dotted\",\n          }}\n        >\n          <Grid\n            columns={new Array(6).fill(0).map((_) => \"1fr\")}\n            gap=\"medium\"\n            className=\"cont\"\n          >\n            {students.map((student) => (\n              <StudentContainer student={student} />\n            ))}\n          </Grid>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}